---
layout: post
title: "[Blog] Github 블로그 만들기"
date: 2020-08-03 13:20:23 +0900
category: Git
---


본격적으로 개발에 대해서 공부하기로 마음은 먹었지만, 항상 로컬에 정리하다보니 파일들이 어수선해지기 시작했다.

이제 배운 내용을 좀 더 편하게 관리하기 위해, 예전에 테마만 적용시키고 외면했던 Github 블로그를 다시 재활용하려고 한다!!

일단 아래에 Github에 Jekyll 테마를 적용시키는 방법을 정리해봤다. ([참고 블로그](https://zeddios.tistory.com/1222))      



# 1. Github에 새 저장소 생성

---



![alt text](/public/img/gitblog/gitblog_1.png)

__!! 이때 저장소명은 `username.github.io`로 해야한다 ! !__



그 후 아래 명령어로 로컬에 해당 repository를 다운 받는다.

```shell
$ git clone https://github.com/{username}/{username}.github.io.git
```



# 2. Ruby 설치

---



[Ruby 설치 주소](https://rubyinstaller.org/downloads/) 링크로 접속하여 제일 최신 Ruby를 설치하자.

![alt text](/public/img/gitblog/gitblog_2.png)

설치가 잘 되었는지 확인하기 위해 아래와 같이 입력해본다.

```shell
$ gem --version
# 3.2.22
```





# 3. jekyll 테마 적용

---

1. Ruby 설치가 완료됐으면 gem 명령어를 사용해 jekyll을 설치한다.

   ```
   $ gem install jekyll bundler
   ```

2. [jekyll 테마 사이트](http://jekyllthemes.org/)에 들어가 원하는 테마를 선택하여 다운받는다.

   ![alt text](/public/img/gitblog/gitblog_3.png)

3. 압축파일을 풀고 모든 파일을 git 로컬 저장소에 복사 붙여넣기를 한다.

   ![alt text](/public/img/gitblog/gitblog_4.png)

4. bundle 명령어를 통해 로컬에 우선 테스트 해본다!!

   ```shell
   $ bundle install
   $ bundle exec jekyll serve
   ```

   여기서 dependency error가 정말 많이 발생한다. 이 때, 에러문구를 살펴보고 필요한 패키지들은 `gem install [package]`를 해주면 된다...

   ![alt text](/public/img/gitblog/gitblog_5.png)

   jekyll 테마가 잘 적용이 됐는지 확인하고!!

5. git push를 통해 원격저장소에도 똑같이 적용시킨다.

   ```shell
   $ git add *
   $ git commit -m "message"
   $ git push origin main
   ```

6. 이제 원격저장소에도 똑같이 적용된 것을 확인하면 완료!!

